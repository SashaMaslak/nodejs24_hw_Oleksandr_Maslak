name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

env:
  NODE_ENV: development
  PORT: 3100

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment variables
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          THROTTLE_LIMIT: ${{ secrets.THROTTLE_LIMIT }}
          THROTTLE_TTL: ${{ secrets.THROTTLE_TTL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
          JWT_ACCESS_SECRET_EXPIRE: ${{ secrets.JWT_ACCESS_SECRET_EXPIRE }}
          JWT_REFRESH_SECRET_EXPIRE: ${{ secrets.JWT_REFRESH_SECRET_EXPIRE }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
          MONGO_EXPRESS_USERNAME: ${{ secrets.MONGO_EXPRESS_USERNAME }}
          MONGO_EXPRESS_PASSWORD: ${{ secrets.MONGO_EXPRESS_PASSWORD }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_DIR: ${{ secrets.DOCKERHUB_DIR }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull Docker image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_DIR }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker and Git
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -a -G docker ec2-user
            sudo yum install -y git

            # Clone project and navigate to directory
            if [ ! -d "my-nestjs-app" ]; then
              git clone https://github.com/YOUR_GITHUB_USERNAME/YOUR_REPO_NAME.git my-nestjs-app
            fi
            cd my-nestjs-app

            # Pull latest changes
            git pull

            # Run docker-compose with your environment variables
            echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
            chmod 600 ec2-key.pem
            export $(cat .env | xargs)

            # Stop existing containers if any
            docker-compose down || true

            # Start containers with Docker Compose
            docker-compose up -d --build

            # Cleanup
            rm -f ec2-key.pem
